{"version":3,"file":"core.umd.js","sources":["../../../src/lib/core/ngx-analytics-config.ts","../../../src/lib/core/ngx-analytics-token.ts","../../../src/lib/core/routerless.ts","../../../src/lib/core/ngx-analytics.ts","../../../src/lib/core/angular-router.ts","../../../src/lib/core/ngx-analyticsOn.ts","../../../src/lib/core/ngx-analytics.module.ts"],"sourcesContent":["export interface GoogleAnalyticsSettings {\n  /** array of additional account names (only works for analyticsjs) */\n  additionalAccountNames: string[];\n  userId: any;\n  /** see https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#transport */\n  transport: string;\n}\n\nexport interface AppInsightsSettings {\n  userId: string;\n}\n\nexport interface GoogleTagManagerSettings {\n  userId: any;\n}\n\nexport interface PageTrackingSettings {\n  autoTrackVirtualPages: boolean;\n  basePath: string;\n  excludedRoutes: (string | RegExp)[];\n  /** drop ids from url `/sections/123/pages/456` -> `/sections/pages` */\n  clearIds: boolean;\n  /** drop query params from url `/sections/123/pages?param=456&param2=789` -> `/sections/123/pages` */\n  clearQueryParams: boolean;\n  /** used with clearIds, define the matcher to clear url parts */\n  idsRegExp: RegExp;\n}\n\nexport interface NgxAnalyticsSettings {\n  pageTracking: Partial<PageTrackingSettings>;\n  /** Disable page tracking */\n  developerMode: boolean;\n  ga: Partial<GoogleAnalyticsSettings>;\n  appInsights: Partial<AppInsightsSettings>;\n  gtm: Partial<GoogleTagManagerSettings>;\n}\n\nexport class DefaultConfig implements NgxAnalyticsSettings {\n  pageTracking = {\n    autoTrackVirtualPages: true,\n    basePath: '',\n    excludedRoutes: [],\n    clearIds: false,\n    clearQueryParams: false,\n    idsRegExp: /^\\d+$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/,\n  };\n  developerMode = false;\n  ga = {};\n  appInsights = {};\n  gtm = {};\n}\n","import { InjectionToken, Provider } from '@angular/core';\n\nimport { NgxAnalyticsSettings } from './ngx-analytics-config';\n\nexport interface NgxAnalyticsToken {\n  providers: Provider[];\n  settings: Partial<NgxAnalyticsSettings>;\n}\n\nexport const ANGULARTICS2_TOKEN = new InjectionToken<NgxAnalyticsToken>('ANGULARTICS2');\n","import { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\nimport { NgxAnalyticsSettings } from './ngx-analytics-config';\n\nexport interface TrackNavigationEnd {\n  url: string;\n}\n\nexport class RouterlessTracking {\n  trackLocation(settings: NgxAnalyticsSettings): Observable<TrackNavigationEnd> {\n    return new BehaviorSubject<TrackNavigationEnd>({ url: '/' });\n  }\n  prepareExternalUrl(url: string): string {\n    return url;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\nimport { NgxAnalyticsSettings, DefaultConfig } from './ngx-analytics-config';\nimport { EventTrack, PageTrack, UserTimings } from './ngx-analytics-interfaces';\nimport { NgxAnalyticsToken, ANGULARTICS2_TOKEN } from './ngx-analytics-token';\nimport { RouterlessTracking, TrackNavigationEnd } from './routerless';\n\n\nexport class NgxAnalytics {\n  settings: NgxAnalyticsSettings;\n\n  pageTrack = new ReplaySubject<Partial<PageTrack>>(10);\n  eventTrack = new ReplaySubject<Partial<EventTrack>>(10);\n  exceptionTrack = new ReplaySubject<any>(10);\n  setAlias = new ReplaySubject<string>(10);\n  setUsername = new ReplaySubject<{ userId: string | number } | string>(10);\n  setUserProperties = new ReplaySubject<any>(10);\n  setUserPropertiesOnce = new ReplaySubject<any>(10);\n  setSuperProperties = new ReplaySubject<any>(10);\n  setSuperPropertiesOnce = new ReplaySubject<any>(10);\n  userTimings = new ReplaySubject<UserTimings>(10);\n\n  constructor(\n    private tracker: RouterlessTracking,\n     setup: NgxAnalyticsToken,\n  ) {\n    const defaultConfig = new DefaultConfig();\n    this.settings = { ...defaultConfig, ...setup.settings };\n    this.settings.pageTracking = {\n      ...defaultConfig.pageTracking,\n      ...setup.settings.pageTracking,\n    };\n    this.tracker\n      .trackLocation(this.settings)\n      .subscribe((event: TrackNavigationEnd) =>\n        this.trackUrlChange(event.url),\n      );\n  }\n\n  /** @deprecated */\n  virtualPageviews(value: boolean) {\n    this.settings.pageTracking.autoTrackVirtualPages = value;\n  }\n  /** @deprecated */\n  excludeRoutes(routes: Array<string | RegExp>) {\n    this.settings.pageTracking.excludedRoutes = routes;\n  }\n  /** @deprecated */\n  withBase(value: string) {\n    this.settings.pageTracking.basePath = value;\n  }\n  /** @deprecated */\n  clearIds(value: boolean) {\n    this.settings.pageTracking.clearIds = value;\n  }\n  /** @deprecated */\n  developerMode(value: boolean) {\n    this.settings.developerMode = value;\n  }\n\n  protected trackUrlChange(url: string) {\n    if (this.settings.pageTracking.autoTrackVirtualPages && !this.matchesExcludedRoute(url)) {\n      const clearedUrl = this.clearUrl(url);\n      let path: string;\n      if (this.settings.pageTracking.basePath.length) {\n        path = this.settings.pageTracking.basePath + clearedUrl;\n      } else {\n        path = this.tracker.prepareExternalUrl(clearedUrl);\n      }\n      this.pageTrack.next({ path });\n    }\n  }\n\n  /**\n   * Use string literals or regular expressions to exclude routes\n   * from automatic pageview tracking.\n   *\n   * @param url location\n   */\n  protected matchesExcludedRoute(url: string): boolean {\n    for (const excludedRoute of this.settings.pageTracking.excludedRoutes) {\n      const matchesRegex = excludedRoute instanceof RegExp && excludedRoute.test(url);\n      if (matchesRegex || url.indexOf(<string>excludedRoute) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Removes id's from tracked route.\n   *  EX: `/project/12981/feature` becomes `/project/feature`\n   *\n   * @param url current page path\n   */\n  protected clearUrl(url: string): string {\n    if (this.settings.pageTracking.clearIds || this.settings.pageTracking.clearQueryParams) {\n      return url\n        .split('/')\n        .map(part => this.settings.pageTracking.clearQueryParams ? part.split('?')[0] : part)\n        .filter(part => !this.settings.pageTracking.clearIds || !part.match(this.settings.pageTracking.idsRegExp))\n        .join('/');\n    }\n    return url;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RouterlessTracking, },\n{type: undefined, decorators: [{ type: Inject, args: [ANGULARTICS2_TOKEN, ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\nimport { filter } from 'rxjs/operators/filter';\nimport { map } from 'rxjs/operators/map';\n\nimport { Observable } from 'rxjs/Observable';\nimport { RouterlessTracking, TrackNavigationEnd } from './routerless';\n\n/**\n * Track Route changes for applications using Angular's\n * default router\n *\n * @link https://angular.io/api/router/Router\n */\n\nexport class AngularRouterTracking implements RouterlessTracking {\n  constructor(\n    private router: Router,\n    private location: Location,\n  ) {}\n\n  trackLocation(settings): Observable<TrackNavigationEnd> {\n    return this.router.events.pipe(\n      filter(e => e instanceof NavigationEnd),\n      filter(() => !settings.developerMode),\n      map((e: NavigationEnd) => {\n        return { url: e.urlAfterRedirects };\n      }),\n    );\n  }\n\n  prepareExternalUrl(url: string): string {\n    return this.location.prepareExternalUrl(url);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n{type: Location, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  Injectable,\n  Input,\n  NgModule,\n  Renderer2,\n} from '@angular/core';\nimport { NgxAnalytics } from './ngx-analytics';\n\n\n\nexport class NgxAnalyticsOn implements AfterContentInit {\n   ngxAnalyticsOn: string;\n   angularticsAction: string;\n   angularticsCategory: string;\n   angularticsLabel: string;\n   angularticsValue: string;\n   angularticsProperties: any = {};\n\n  constructor(\n    private elRef: ElementRef,\n    private ngxAnalytics: NgxAnalytics,\n    private renderer: Renderer2\n  ) { }\n\n  ngAfterContentInit() {\n    this.renderer.listen(\n      this.elRef.nativeElement,\n      this.ngxAnalyticsOn || 'click',\n      (event: Event) => this.eventTrack(event),\n    );\n  }\n\n  eventTrack(event: Event) {\n    const action = this.angularticsAction; // || this.inferEventName();\n    const properties: any = {\n      ...this.angularticsProperties,\n      eventType: event.type,\n    };\n\n    if (this.angularticsCategory) {\n      properties.category = this.angularticsCategory;\n    }\n    if (this.angularticsLabel) {\n      properties.label = this.angularticsLabel;\n    }\n    if (this.angularticsValue) {\n      properties.value = this.angularticsValue;\n    }\n\n    this.ngxAnalytics.eventTrack.next({\n      action,\n      properties,\n    });\n  }\n\n  /*private isCommand() {\n    return ['a:', 'button:', 'button:button', 'button:submit', 'input:button', 'input:submit'].indexOf(\n      getDOM().tagName(this.el).toLowerCase() + ':' + (getDOM().type(this.el) || '')) >= 0;\n  }\n\n  private inferEventName() {\n    if (this.isCommand()) return getDOM().getText(this.el) || getDOM().getValue(this.el);\n    return getDOM().getProperty(this.el, 'id') || getDOM().getProperty(this.el, 'name') || getDOM().tagName(this.el);\n  }*/\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n{ type: Directive, args: [{ selector: '[ngx-analyticsOn]' }, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgxAnalytics, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngxAnalyticsOn': [{ type: Input, args: ['ngx-analyticsOn', ] },],\n'angularticsAction': [{ type: Input },],\n'angularticsCategory': [{ type: Input },],\n'angularticsLabel': [{ type: Input },],\n'angularticsValue': [{ type: Input },],\n'angularticsProperties': [{ type: Input },],\n};\n}\n\n\nexport class NgxAnalyticsOnModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [NgxAnalyticsOn],\n  exports: [NgxAnalyticsOn],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ModuleWithProviders,\n  NgModule,\n  Provider,\n} from '@angular/core';\n\nimport { AngularRouterTracking } from './angular-router';\nimport { NgxAnalytics } from './ngx-analytics';\nimport { NgxAnalyticsSettings } from './ngx-analytics-config';\nimport { ANGULARTICS2_TOKEN } from './ngx-analytics-token';\nimport { NgxAnalyticsOn, NgxAnalyticsOnModule } from './ngx-analyticsOn';\nimport { RouterlessTracking } from './routerless';\n\n\n\nexport class NgxAnalyticsModule {\n  static forRoot(\n    providers: Provider[],\n    settings: Partial<NgxAnalyticsSettings> = {},\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgxAnalyticsModule,\n      providers: [\n        { provide: ANGULARTICS2_TOKEN, useValue: { providers, settings } },\n        NgxAnalytics,\n        { provide: RouterlessTracking, useClass: AngularRouterTracking },\n        ...providers,\n      ],\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [NgxAnalyticsOnModule],\n  exports: [NgxAnalyticsOn],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["InjectionToken","BehaviorSubject","ReplaySubject","Injectable","Inject","router","filter","NavigationEnd","map","Router","Location","Directive","ElementRef","Renderer2","Input","NgModule"],"mappings":"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"}