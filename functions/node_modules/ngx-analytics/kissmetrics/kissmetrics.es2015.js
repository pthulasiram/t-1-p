import { Injectable } from '@angular/core';
import { NgxAnalytics } from 'ngx-analytics';

var NgxAnalyticsKissmetrics = (function () {
    function NgxAnalyticsKissmetrics(ngxAnalytics$$1) {
        var _this = this;
        this.ngxAnalytics = ngxAnalytics$$1;
        if (typeof (_kmq) === 'undefined') {
            _kmq = [];
        }
        this.ngxAnalytics.pageTrack.subscribe(function (x) { return _this.pageTrack(x.path); });
        this.ngxAnalytics.eventTrack.subscribe(function (x) { return _this.eventTrack(x.action, x.properties); });
        this.ngxAnalytics.setUsername.subscribe(function (x) { return _this.setUsername(x); });
        this.ngxAnalytics.setUserProperties.subscribe(function (x) { return _this.setUserProperties(x); });
    }
    NgxAnalyticsKissmetrics.prototype.pageTrack = function (path) {
        _kmq.push(['record', 'Pageview', { 'Page': path }]);
    };
    NgxAnalyticsKissmetrics.prototype.eventTrack = function (action, properties) {
        _kmq.push(['record', action, properties]);
    };
    NgxAnalyticsKissmetrics.prototype.setUsername = function (userId) {
        _kmq.push(['identify', userId]);
    };
    NgxAnalyticsKissmetrics.prototype.setUserProperties = function (properties) {
        _kmq.push(['set', properties]);
    };
    NgxAnalyticsKissmetrics.decorators = [
        { type: Injectable },
    ];
    NgxAnalyticsKissmetrics.ctorParameters = function () { return [
        { type: NgxAnalytics, },
    ]; };
    return NgxAnalyticsKissmetrics;
}());

export { NgxAnalyticsKissmetrics };
//# sourceMappingURL=kissmetrics.es2015.js.map
