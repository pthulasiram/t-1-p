{"version":3,"sources":["ng://ng2-adsense/adsense-config.ts","ng://ng2-adsense/adsense.component.ts","ng://ng2-adsense/adsense.module.ts"],"names":["ADSENSE_TOKEN","InjectionToken","AdsenseComponent","config","this","adRegion","Math","floor","random","prototype","ngOnInit","use","source","defaultValue","undefined","adClient","adSlot","adFormat","display","width","height","layout","layoutKey","pageLevelAds","timeOutRetry","adtest","fullWidthResponsive","ngOnDestroy","iframe","ins","nativeElement","querySelector","contentWindow","src","remove","ngAfterViewInit","_this","push","TypeError","setTimeout","p","google_ad_client","enable_page_level_ads","window","e","Component","args","selector","template","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","Inject","Input","ViewChild","AdsenseModule","forRoot","ngModule","providers","provide","useValue","NgModule","imports","CommonModule","exports","declarations"],"mappings":"+TA+BA,IAAaA,EAAgB,IAAIC,EAAAA,eAC/B,iBChCFC,EAAA,WA2DE,SAAAA,EACiCC,GAAAC,KAAAD,OAAAA,EAtBxBC,KAAAC,SAAW,QAAUC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,EA6EpE,OApDEN,EAAAO,UAAAC,SAAA,eACQP,EAASC,KAAKD,OACpB,SAASQ,EAAOC,EAAWC,GACzB,OAAOV,GAAUS,IAAWE,UAAYF,EAASC,EAEnDT,KAAKW,SAAWJ,EAAIP,KAAKW,SAAUZ,EAAOY,UAC1CX,KAAKY,OAASL,EAAIP,KAAKY,OAAQb,EAAOa,QACtCZ,KAAKa,SAAWN,EAAIP,KAAKa,SAAUd,EAAOc,UAAY,QACtDb,KAAKc,QAAUP,EAAIP,KAAKc,QAASf,EAAOe,SAAW,SACnDd,KAAKe,MAAQR,EAAIP,KAAKe,MAAOhB,EAAOgB,OACpCf,KAAKgB,OAAST,EAAIP,KAAKgB,OAAQjB,EAAOiB,QACtChB,KAAKiB,OAASV,EAAIP,KAAKiB,OAAQlB,EAAOkB,QACtCjB,KAAKkB,UAAYX,EAAIP,KAAKkB,UAAWnB,EAAOmB,WAC5ClB,KAAKmB,aAAeZ,EAAIP,KAAKmB,aAAcpB,EAAOoB,cAClDnB,KAAKoB,aAAeb,EAAIP,KAAKoB,aAAcrB,EAAOqB,cAAgB,KAClEpB,KAAKqB,OAASd,EAAIP,KAAKqB,OAAQtB,EAAOsB,QACtCrB,KAAKsB,oBAAsBf,EAAIP,KAAKsB,oBAAqBvB,EAAOuB,sBAElExB,EAAAO,UAAAkB,YAAA,eACQC,EAASxB,KAAKyB,IAAIC,cAAcC,cAAc,UAChDH,GAAUA,EAAOI,gBACnBJ,EAAOK,IAAM,cACbL,EAAOM,WASXhC,EAAAO,UAAA0B,gBAAA,WAAA,IAAAC,EAAAhC,KACcA,KAAKiC,iBACEC,WACjBC,WAAW,WAAM,OAAAH,EAAKC,QAAQjC,KAAKoB,eAIvCtB,EAAAO,UAAA4B,KAAA,eACQG,EAAS,GACXpC,KAAKmB,eACPiB,EAAEC,iBAAmBrC,KAAKW,SAC1ByB,EAAEE,uBAAwB,GAE5B,IAGE,OAFoBC,OAAoB,YAC5BN,KAAKG,IACV,EACP,MAAOI,GACP,OAAOA,wBAnGZC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,yBACVC,SAAU,mcAaVC,qBAAqB,EACrBC,gBAAiBC,EAAAA,wBAAwBC,gFA+BtCC,EAAAA,OAAMP,KAAA,CAAC9C,0CA3BTsD,EAAAA,sBAEAA,EAAAA,wBACAA,EAAAA,wBAEAA,EAAAA,uBAEAA,EAAAA,qBAEAA,EAAAA,sBAEAA,EAAAA,sBAEAA,EAAAA,yBAEAA,EAAAA,4BAEAA,EAAAA,4BAEAA,EAAAA,sBAEAA,EAAAA,mCAEAA,EAAAA,mBACAC,EAAAA,UAAST,KAAA,CAAC,UA0Db5C,EAnHA,GCAAsD,EAAA,WAMA,SAAAA,KAYA,OANSA,EAAAC,QAAP,SAAetD,GACb,YADa,IAAAA,IAAAA,EAAA,IACN,CACLuD,SAAUF,EACVG,UAAW,CAAC,CAAEC,QAAS5D,EAAe6D,SAAU1D,0BATrD2D,EAAAA,SAAQhB,KAAA,CAAC,CACRiB,QAAS,CAACC,EAAAA,cACVC,QAAS,CAAC/D,GACVgE,aAAc,CAAChE,OASjBsD,EAlBA","sourcesContent":["import { InjectionToken } from '@angular/core';\n\n/**\n * Set optional global default values\n */\nexport interface AdsenseConfig {\n  /** adsense account ca-pub-XXXXXXXXXXXXXXXX */\n  adClient: string;\n  /** ad slot/number */\n  adSlot: string | number;\n  /** data-ad-format default: auto */\n  adFormat: string;\n  /** ins element display style */\n  display: string;\n  /** ins element height in px */\n  width: number;\n  /** ins element width in px */\n  height: number;\n  /** used for in-feed ads */\n  layout: string;\n  /** used for in-feed ads */\n  layoutKey: string;\n  /** enable page-level ads */\n  pageLevelAds: boolean;\n  /** on first load sometimes adsense is not ready */\n  timeOutRetry: number;\n  adtest: string;\n  /** used for flexible ads */\n  fullWidthResponsive: boolean;\n}\n\nexport const ADSENSE_TOKEN = new InjectionToken<AdsenseConfig>(\n  'AdsenseConfig',\n);\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\n\nimport { ADSENSE_TOKEN, AdsenseConfig } from './adsense-config';\n\n@Component({\n  selector: 'ng2-adsense,ng-adsense',\n  template: `\n  <ins #ins class=\"adsbygoogle\"\n    [ngStyle]=\"{'display': display, 'width.px': width, 'height.px': height }\"\n    [attr.data-ad-client]=\"adClient\"\n    [attr.data-ad-slot]=\"adSlot\"\n    [attr.data-ad-format]=\"adFormat\"\n    [attr.data-ad-region]=\"adRegion\"\n    [attr.data-layout]=\"layout\"\n    [attr.data-adtest]=\"adtest\"\n    [attr.data-layout-key]=\"layoutKey\"\n    [attr.data-full-width-responsive]=\"fullWidthResponsive\">\n  </ins>\n  `,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdsenseComponent implements OnInit, AfterViewInit, OnDestroy {\n  /** adsense account ca-pub-XXXXXXXXXXXXXXXX */\n  @Input() adClient: string;\n  /** ad slot/number */\n  @Input() adSlot: string | number;\n  @Input() adFormat: string;\n  /** can be manually set if you need all ads on a page to have same id page-xxx */\n  @Input() adRegion = 'page-' + Math.floor(Math.random() * 10000) + 1;\n  /** ins element display style */\n  @Input() display: string;\n  /** ins element height in px */\n  @Input() width: number;\n  /** ins element width in px */\n  @Input() height: number;\n  /** used for in-feed ads */\n  @Input() layout: string;\n  /** used for in-feed ads */\n  @Input() layoutKey: string;\n  /** enable page-level ads */\n  @Input() pageLevelAds: boolean;\n  /** on first load sometimes adsense is not ready */\n  @Input() timeOutRetry: number;\n  /** sets up some sort of google test ad */\n  @Input() adtest: string;\n  /* used for flexible ads */\n  @Input() fullWidthResponsive: boolean;\n  @ViewChild('ins') ins: any;\n\n  constructor(\n    @Inject(ADSENSE_TOKEN) private config: AdsenseConfig,\n  ) { }\n\n  ngOnInit() {\n    const config = this.config;\n    function use<T>(source: T, defaultValue: T): T {\n      return config && source !== undefined ? source : defaultValue;\n    }\n    this.adClient = use(this.adClient, config.adClient);\n    this.adSlot = use(this.adSlot, config.adSlot);\n    this.adFormat = use(this.adFormat, config.adFormat || 'auto');\n    this.display = use(this.display, config.display || 'block');\n    this.width = use(this.width, config.width);\n    this.height = use(this.height, config.height);\n    this.layout = use(this.layout, config.layout);\n    this.layoutKey = use(this.layoutKey, config.layoutKey);\n    this.pageLevelAds = use(this.pageLevelAds, config.pageLevelAds);\n    this.timeOutRetry = use(this.timeOutRetry, config.timeOutRetry || 200);\n    this.adtest = use(this.adtest, config.adtest);\n    this.fullWidthResponsive = use(this.fullWidthResponsive, config.fullWidthResponsive);\n  }\n  ngOnDestroy() {\n    const iframe = this.ins.nativeElement.querySelector('iframe');\n    if (iframe && iframe.contentWindow) {\n      iframe.src = 'about:blank';\n      iframe.remove();\n    }\n  }\n\n  /**\n   * attempts to push the ad twice. Usually if one doesn't work the other\n   * will depeding on if the browser has the adsense code cached and\n   * if its the first page to be loaded\n   */\n  ngAfterViewInit() {\n    const res = this.push();\n    if (res instanceof TypeError) {\n      setTimeout(() => this.push(), this.timeOutRetry);\n    }\n  }\n\n  push() {\n    const p: any = {};\n    if (this.pageLevelAds) {\n      p.google_ad_client = this.adClient;\n      p.enable_page_level_ads = true;\n    }\n    try {\n      const adsbygoogle = window['adsbygoogle'];\n      adsbygoogle.push(p);\n      return true;\n    } catch (e) {\n      return e;\n    }\n  }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { AdsenseConfig, ADSENSE_TOKEN } from './adsense-config';\nimport { AdsenseComponent } from './adsense.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [AdsenseComponent],\n  declarations: [AdsenseComponent],\n})\nexport class AdsenseModule {\n  static forRoot(config: Partial<AdsenseConfig> = {}): ModuleWithProviders {\n    return {\n      ngModule: AdsenseModule,\n      providers: [{ provide: ADSENSE_TOKEN, useValue: config }],\n    };\n  }\n}\n"]}